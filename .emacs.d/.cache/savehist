;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(coding-system-history cider-host-history minibuffer-history helm-M-x-input-history evil-ex-history))
(setq cider-host-history '("localhost"))
(setq minibuffer-history '("clj-chan:44499" "multiple"))
(setq helm-M-x-input-history '("terminal" "packa" "pack"))
(setq evil-ex-history '(#("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("q" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("q" 0 1 (ex-index 1)) #("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("q" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("!" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #(".,.+1q" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q1" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("w!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("1" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("Q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("w!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 6578)) #("w" 0 1 (ex-index 1))))
(setq evil-jumps-history '((883 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (1 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (7735 "/home/korolr/gruvbox-theme.el") (1 "/home/korolr/gruvbox-theme.el") (1769 "/home/korolr/.spacemacs") (1 "/home/korolr/.spacemacs") (1 "/home/korolr/.spacemacs") (1 "/home/korolr/.spacemacs") (1840 "/home/korolr/.spacemacs") (1 "/home/korolr/.spacemacs") (2396 "/home/korolr/Desktop/vuejs-blog-boostrap-ajax/src/views/Blog.vue") (1 "/home/korolr/Desktop/vuejs-blog-boostrap-ajax/src/views/Blog.vue") (1 "/home/korolr/Desktop/flask-project-d/project/server/models.py") (801 "/home/korolr/Desktop/flask-project-d/project/server/models.py") (1623 "/home/korolr/Desktop/flask-project-d/project/server/models.py") (1275 "/home/korolr/Desktop/flask-project-d/project/server/models.py") (1 "/home/korolr/Desktop/flask-project-d/project/server/models.py") (1524 "/home/korolr/Desktop/flask-project-d/project/server/models.py") (801 "/home/korolr/Desktop/flask-project-d/project/server/models.py") (1 "/home/korolr/Desktop/flask-project-d/project/server/models.py") (604 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (600 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (600 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (633 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (600 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (1589 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (600 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (600 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (600 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (608 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (599 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (1589 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (599 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (599 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (599 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (1589 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (598 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (598 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (862 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (857 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (1245 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (643 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (1 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (599 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (153 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (2182 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (4 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (1 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (56 "/home/korolr/Desktop/cl-chan/cl-chan.lisp") (1 "/home/korolr/Desktop/sandbox/clojure/clj-chan/src/clj/clj_chan/server.clj") (1 "/home/korolr/.spacemacs") (1 "/home/korolr/Desktop/cl-chan/cl-chan.lisp")))
(setq mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring '("git" "heme" "line n"))
(setq extended-command-history '("package-install"))
